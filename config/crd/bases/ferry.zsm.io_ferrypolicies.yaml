
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: ferrypolicies.ferry.zsm.io
spec:
  group: ferry.zsm.io
  names:
    kind: FerryPolicy
    listKind: FerryPolicyList
    plural: ferrypolicies
    singular: ferrypolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.lastSynchronizationTimestamp
      name: last-synchronization
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FerryPolicy is the Schema for the ferrypolicies API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FerryPolicySpec defines the desired state of FerryPolicy
            properties:
              rules:
                items:
                  description: FerryPolicySpecRule defines the desired rule of FerryPolicyRule
                    Service mapping from Exports cluster to Imports cluster
                  properties:
                    exports:
                      description: Exports is a list of exports of the FerryPolicy.
                      items:
                        description: FerryPolicySpecRuleExport defines the desired
                          export of FerryPolicyRule
                        properties:
                          clusterName:
                            description: ClusterName is specifies the name of the
                              cluster
                            type: string
                          match:
                            description: Match is specifies the service of matched
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                description: Labels is specifies the labels of matched
                                  cannot be specified together with Name
                                type: object
                              name:
                                description: Name is specifies the name of matched
                                  cannot be specified together with Labels
                                type: string
                              namespace:
                                description: Namespace is specifies the namespace
                                  of matched
                                type: string
                            type: object
                        required:
                        - clusterName
                        type: object
                      type: array
                    imports:
                      description: Imports is a list of imports of the FerryPolicy.
                      items:
                        description: FerryPolicySpecRuleImport defines the desired
                          import of FerryPolicyRule
                        properties:
                          clusterName:
                            description: ClusterName is specifies the name of the
                              cluster
                            type: string
                          match:
                            description: Match is specifies the service of matched
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                description: Labels is specifies the labels of matched
                                  cannot be specified together with Name
                                type: object
                              name:
                                description: Name is specifies the name of matched
                                  cannot be specified together with Labels
                                type: string
                              namespace:
                                description: Namespace is specifies the namespace
                                  of matched
                                type: string
                            type: object
                        required:
                        - clusterName
                        type: object
                      type: array
                  required:
                  - exports
                  - imports
                  type: object
                type: array
            required:
            - rules
            type: object
          status:
            description: FerryPolicyStatus defines the observed state of FerryPolicy
            properties:
              conditions:
                description: Conditions current service state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastSynchronizationTimestamp:
                description: LastSynchronizationTimestamp is the last time synchronization
                  to the cluster.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
